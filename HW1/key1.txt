$ wget https://web.cs.ucla.edu/classes/winter18/cs35L/assign/assign1.html
$ cp assign1.html exer1.html
$ cp assign1.html exer2.html
$ cp assign1.html exer3.html

Exercise 1.1: Moving around in Emacs
1) $ emacs exer1.html
2) C-s H T M L
3) C-s s c a v e n g e r
4) C-s s e l f - r e f e r e n t i a l 
5) M-< C-s a r r o w 
6) C-e
7) C-a
8) You can maybe use M-v or C-v to move up and down a page in the text,
respectively.
But you can more importantly use the search command C-s
making word-finding a lot easier
9) No I did not.
10) C-x C-c

Exercise 1.2: Deleting text in Emacs
2) C-s <!--
   C-a
   C-k
3) C-s <!--
   C-a
   C-k
4) C-s <!--
   C-a
   C-k C-k C-k
5) C-s <!--, M-b, M-f, C-SP, RIGHT RIGHT RIGHT RIGHT RIGHT RIGHT C-w 
   C-s <!--, C-SP DOWN DOWN DOWN DOWN C-w
   C-s <!--, C-a, C-k

Exercise 1.3: Inserting Text in Emacs
1) $ emacs exer3.html
2) M-%, A s s i g n m e n t SP 1 Enter, A s s i g n m e n t 51 Enter, y, y, n
3) M-<, M-%, U T F - 8 Enter, U S - A S C I I Enter, y
4) M-<, C-s </ol>, C-e, Enter

Exercise 1.4: Other editing tasks in Emacs
1) $ c a t SP  e x e r 2 . h t m l SP  e x e r 2 . d i f f SP
> e x e r 4 . h m l
2) $ e m a c s SP e x e r 4 . h t m l
3/4) M->, C-SP, M-w a bunch of times
5) C-SP, M->
6) C-x u
8) C-r <ol>, found 7 instances!
   M-%, <ol>, <oL>, y (7 times) 
9) $ d i f f SP - u e x e r 1 . h t m l SP e x e r 4 . h t m l SP
> e x e r 4 . d i f f

Exercise 1.5: Doing commands in Emacs
1) $ m k d i r SP j u n k 
3) M-x c o m p i l e , g c c SP  h e l l o . c SP - o SP  h e l l o
4) . / h e l l o
5)
#include <stdio.h>
int
main (void)
{
  char n = '\n';
 char b = '\\' ;
 char q = ;"' ;
 char const *p = "#include <stdio.h>%cint%cmain
 (void)%c{%c  char n = '%cn';%c char b = '%c%c' ;
 %c char q = ;%c' ;%c char const *p = %c%s%c;
 %c printf(p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
 %c  return 0;%c}%c";
 printf(p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
  return 0;
}

Exercise 1.6: Running Elisp Code
1) C-x b Enter
2) ( r a n d o m ) C-j
3) ( s e t q SP x SP ( r a n d o m ) C-j
   ( s e t q SP y SP ( r a n d o m ) C-j
4) ( - SP x SP y) C-j
   The answer was wrong because it should have yielded a positive value of 
2239056661068727999 when it should have been a negative value since x
was a negative value and y was a positive value. Maybe it's due
to signed overflow?
5) M-: (- SP x SP y) Enter
   This yields the same result but also states the octal and
   hexadecimal version of the value.
6) It is not truly random because if ran repeatedly, it yields a number of
10^18 or 10^19 magnitude pretty much everytime. Where are the small ints? 
7)The difference should only be incorrect if there is overflow. This is
only possible if the following are true:
 1 - 1 number is positive while the other is negative
     This is true 50% of the time.
 2 - if the sum is either greater than T_max or less than T_min.
     I haven't taken Stats 100A yet so idk how calculate the
     probability of this...
 But you take probability for condition 1 and multiply it by condition 2
 and that's your answer!
 

